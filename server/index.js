const express = require('express');
const cors = require('cors');
const supabase = require('./supabaseClient');
require('dotenv').config();

const app = express();
app.use(cors());
app.use(express.json());
app.use(express.static('public'));

// âœ… Route d'inscription
app.post('/signup', async (req, res) => {
  const { email, password } = req.body;
  const { data, error } = await supabase.auth.admin.createUser({
    email,
    password,
    email_confirm: true,
  });
  if (error) return res.status(400).json({ error: error.message });
  res.status(200).json(data);
});

// âœ… Route de connexion
app.post('/login', async (req, res) => {
  const { email, password } = req.body;
  const { data, error } = await supabase.auth.signInWithPassword({ email, password });
  if (error) return res.status(401).json({ error: error.message });
  res.status(200).json(data);
});

// âœ… Ajouter un artiste liÃ© Ã  un utilisateur
app.post('/add-artist', async (req, res) => {
  const { user_id, artist_name } = req.body;
  const { error } = await supabase.from('artists').insert([{ user_id, artist_name }]);
  if (error) return res.status(400).json({ error: error.message });
  res.status(200).json({ success: true });
});

// âœ… RÃ©cupÃ©rer tous les artistes dâ€™un utilisateur
app.post('/get-artists', async (req, res) => {
  const { user_id } = req.body;
  const { data, error } = await supabase.from('artists').select('*').eq('user_id', user_id);
  if (error) return res.status(400).json({ error: error.message });
  res.status(200).json(data);
});

// âœ… ðŸ”¥ Nouvelle route dynamique : rÃ©cupÃ©rer un utilisateur par ID
app.get('/user/:id', async (req, res) => {
  const { id } = req.params;
  const { data, error } = await supabase
    .from('users')
    .select('*')
    .eq('id', id)
    .single(); // rÃ©cupÃ¨re un seul rÃ©sultat

  if (error) return res.status(404).json({ error: error.message });
  res.status(200).json(data);
});

// âœ… Page non trouvÃ©e
app.get('*', (req, res) => {
  res.status(404).send('Page non trouvÃ©e');
});

// âœ… DÃ©marrage du serveur
app.listen(3000, () => console.log('âœ… Server running on http://localhost:3000'));
